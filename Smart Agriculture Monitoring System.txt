Smart Agriculture Monitoring System
=======================

Project Overview
---------------
This project is a Smart Agriculture System that monitors environmental conditions and controls actuators based on sensor readings. It consists of:
- An Arduino-based hardware component with multiple sensors
- A Node.js server for data processing and communication
- A web-based dashboard for real-time monitoring and control

Features
--------
* Sensor Monitoring:
  - Temperature and humidity (DHT22)
  - Soil moisture (Analog sensor)
  - Light intensity (BH1750)
  - Gas detection (MQ3)
  - Motion detection (PIR sensor)
  - Rain detection (Rain sensor)

* Actuator Control:
  - Water pump control based on soil moisture
  - Buzzer activation for motion/gas detection

* Web Dashboard:
  - Real-time sensor data visualization
  - Manual control of actuators
  - Alert system for critical conditions

Hardware Components
-------------------
- ESP8266 NodeMCU
- DHT22 Temperature & Humidity Sensor
- BH1750 Light Sensor
- MQ3 Gas Sensor
- PIR Motion Sensor
- Rain Sensor
- Soil Moisture Sensor
- Relay Module (for water pump and relay)
- Buzzer
- Water Pump

Software Components
------------------
* Frontend:
  - HTML/CSS for dashboard interface
  - JavaScript for real-time updates using Socket.IO

* Backend:
  - Node.js with Express
  - Socket.IO for real-time communication
  - Serialport for Arduino communication

Installation
-----------

Prerequisites:
- Node.js (v14 or higher)
- Arduino IDE
- Required Arduino libraries:
  - BH1750
  - DHT sensor library

Setup Steps:
1. Clone the repository:
   git clone https://github.com/yourusername/smart-agriculture-system.git
   cd smart-agriculture-system

2. Install Node.js dependencies:
   npm install

3. Upload Arduino sketch:
   - Open 1st.ino in Arduino IDE
   - Select NodeMCU 1.0 board
   - Upload to your ESP8266

4. Configure the system:
   - Connect all sensors to the ESP8266 as defined in the sketch
   - Ensure correct COM port is specified in server.js

5. Run the server:
   npm start

6. Access the dashboard:
   Open http://localhost:3000 in your browser

File Structure
-------------
smart-agriculture-system/
├── 1st.ino            # Arduino sketch
├── server.js          # Node.js server
├── package.json       # Node.js dependencies
├── public/
│   ├── index.html     # Dashboard HTML
│   ├── script.js      # Client-side JavaScript
│   └── styles.css     # Dashboard styling

Usage
-----
1. Power on the Arduino system
2. Start the Node.js server
3. Open the web dashboard
4. Monitor sensor data in real-time
5. Toggle switches to control actuators manually

Configuration
------------
* Arduino Configuration (1st.ino):
  #define SOIL_DRY_THRESHOLD 30
  #define SOIL_WET_THRESHOLD 80
  #define BUZZER_DURATION 2000
  #define SENSOR_READ_INTERVAL 4000

* Server Configuration (server.js):
  const SERIAL_PORT = 'COM3'; // Change to your Arduino's COM port
  const SERIAL_BAUD_RATE = 115200;

Troubleshooting
--------------
* No sensor data appearing:
  - Check Arduino serial monitor for output
  - Verify COM port in server.js matches Arduino connection

* Dashboard not loading:
  - Ensure Node.js server is running
  - Check console for errors (F12 in browser)


Contributing
-----------
Contributions are welcome! Please open an issue or submit a pull request.

